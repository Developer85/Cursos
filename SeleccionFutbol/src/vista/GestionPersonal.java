
package vista;

import java.util.Collections;
import javax.swing.JOptionPane;
import modelo.Entrenador;
import modelo.Jugador;
import modelo.ListaPersonas;
import modelo.Persona;
import static seleccionfutbol.SeleccionFutbol.ficheroEntrenadores;
import static seleccionfutbol.SeleccionFutbol.ficheroJugadores;
import static seleccionfutbol.SeleccionFutbol.todosEntrenadores;
import static seleccionfutbol.SeleccionFutbol.todosJugadores;

/**
 *
 * @author usu21
 */
public class GestionPersonal extends javax.swing.JInternalFrame {    
    private ListaPersonas todos;
    private Persona personaSeleccionada;
    
    public ListaPersonas getTodos() {
        return todos;
    }

    public void setTodos(ListaPersonas todos) {
        this.todos = todos;
    }
    
    public Persona getPersonaSeleccionada() {
        return personaSeleccionada;
    }

    public void setPersonaSeleccionada(Persona personaSeleccionada) {
        this.personaSeleccionada = personaSeleccionada;
    }

    /**
     * Creates new form GestionPersonal
     */
    public GestionPersonal() {
        todos = new ListaPersonas();
        personaSeleccionada = new Persona();
        
        for (Jugador j : todosJugadores.getLista()) {
            todos.altaPersona(j);
        }
        
        for (Entrenador e : todosEntrenadores.getLista()) {
            todos.altaPersona(e);
        }
        
        Collections.sort(todos.getLista());        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePersonal = new javax.swing.JTable();
        jButtonModificar = new javax.swing.JButton();
        jButtonBorrar = new javax.swing.JButton();

        setTitle("Gestión de Personal");

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${todos.lista}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jTablePersonal);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombre}"));
        columnBinding.setColumnName("Nombre");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nacionalidad}"));
        columnBinding.setColumnName("Nacionalidad");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nacimiento}"));
        columnBinding.setColumnName("Nacimiento");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${personaSeleccionada}"), jTablePersonal, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(jTablePersonal);

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonBorrar.setText("Borrar");
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonBorrar)
                        .addGap(0, 333, Short.MAX_VALUE))))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        if (jTablePersonal.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Debes seleccionar a alguien",
                    "Error!!! No hay nada seleccionado", JOptionPane.ERROR_MESSAGE);
        } else {
            if (personaSeleccionada.getClass() == Jugador.class) {
                Jugador j = (Jugador) personaSeleccionada;
                DatosJugador dj = new DatosJugador(null, true, j, "Modificar");
                dj.setLocationRelativeTo(null);
                dj.setVisible(true);
            } else {
                Entrenador e = (Entrenador) personaSeleccionada;
                DatosEntrenador de = new DatosEntrenador(null, true, e, "Modificar");
                de.setLocationRelativeTo(null);
                de.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
        if (jTablePersonal.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Debes seleccionar a alguien",
                    "Error!!! No hay nada seleccionado", JOptionPane.ERROR_MESSAGE);
        } else {
            int resp = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que quieres borrarlo?",
                    "Confirmación de borrado", JOptionPane.YES_NO_OPTION);
            if (resp == JOptionPane.YES_OPTION) {
                todos.bajaPersona(personaSeleccionada);
                
                if (personaSeleccionada.getClass() == Jugador.class) {
                    todosJugadores.bajaJugador((Jugador) personaSeleccionada);
                    ficheroJugadores.grabar(todosJugadores);
                    JOptionPane.showMessageDialog(this, "Se ha dado de baja el jugador.",
                        "Baja Satisfactoria", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    todosEntrenadores.bajaEntrenador((Entrenador) personaSeleccionada);
                    ficheroEntrenadores.grabar(todosEntrenadores);
                    JOptionPane.showMessageDialog(this, "Se ha dadp de baja el entrenador.",
                        "Baja Satisfactoria", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButtonBorrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePersonal;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
